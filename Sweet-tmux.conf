# ==========================
# ===  General settings  ===
# ==========================

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
# color issues fix ^
set -g history-limit 20000
set -g buffer-limit 20
set -s escape-time 100
set -g repeat-time 300
set -g remain-on-exit off
setw -g aggressive-resize on
set -g mouse on                           # Enable mouse support
set -g set-clipboard on                   # Use the system clipboard

set -g display-panes-time 800
set -g display-time 1000

set -g status on
set -g status-interval 5                  # status line update every 5 seconds
#set -g status-position top
#set -g status-justify left

set -g base-index 1                       # Start index of window/pane with 1
setw -g pane-base-index 1                 # cz we're humans, or aren't we?

set -g renumber-windows on                # re-number the new pane if one gets closed
setw -g allow-rename off
setw -g automatic-rename off

set -g set-titles on                      # Set parent terminal title to reflect current window in tmux session
set -g set-titles-string "#I:#W"

set -g monitor-activity on
set -g visual-activity off

# # Change prefix key to C-a, easier to type
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix
# Instead of the above, Add another prefix
set -g prefix2 C-a
bind C-a send-prefix -2

# ==========================
# ===   Key bindings     ===
# ==========================

# bind space to cycle through available layouts
bind space select-layout
# Edit configuration and reload
bind C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"Config reloaded\"'"
# Reload tmux configuration 
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"
# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# bind -n C-0 selectw -t 0
bind 0 selectw -t 0
bind 1 selectw -t 1
bind 2 selectw -t 2
bind 3 selectw -t 3
bind 4 selectw -t 4
bind 5 selectw -t 5
bind 6 selectw -t 6
bind 7 selectw -t 7
bind 8 selectw -t 8
bind 9 selectw -t 9

# # Prompt to rename window right after it's created
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'
# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -fh -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -fv -c "#{pane_current_path}"
# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
# Select pane and windows
bind -r C-[ previous-window
bind -r C-] next-window
bind -r [ select-pane -t :.-
bind -r ] select-pane -t :.+
bind -r C-o swap-pane -D

# Zoom pane
bind + resize-pane -Z

# Kill pane/window/session shortcuts
bind x kill-pane
bind C-x confirm-before -p "kill this window? (y/n)" kill-window
bind C-q confirm-before -p "kill-session #S? (y/n)" kill-session
bind Q confirm-before -p "kill-server? (y/n)" kill-server

# Copy/paste / messes with tmux-yank !!
#bind -T copy-mode-vi v send -X begin-selection
#bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
#bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer

# Easiest, quickest, without prefix, much like Chrome tabs
# Direct shortcuts
bind -n C-t new-window -c "#{pane_current_path}"
bind -n C-PageDown next-window
bind -n C-PageUp previous-window
bind -n C-p select-pane -t :.+ # cycle thru panes
bind -n C-Down split-window -v -c "#{pane_current_path}"
bind -n C-Right split-window -h -c "#{pane_current_path}"
bind -n C-\\ split-window -h -c "#{pane_current_path}" # my right key is broken :(
# kill pane, but only if the pane is not in pain
bind -n C-w if-shell '[ "#{pane_current_command}" = "bash" ] || [ "#{pane_current_command}" = "zsh" ] || [ "#{pane_current_command}" = "fish" ] || [ "#{pane_current_command}" = "tmux" ]' \
    'kill-pane' \
    'confirm-before -p "Pane has a running process. Kill it? (y/n)" "kill-pane"'
# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# =====================================
# ===     Themes and Appearence     ===
# =====================================

# Color Pallette Dracula++
white='#f8f8f2'
gray='#34374a'
lightgray='#888a7e'
darkgray='#282a36'
lightpurple='#bd93f9'
darkpurple='#6272a4'
lightblue="#2c3544"
blue="#1a2332"
darkblue="#111927"
cyan='#8be9fd'
green='#40ea6b'
lime='#9fef00'
orange='#efa85c'
red='#ff5555'
pink='#ff79c6'
yellow='#f1fa8c'

c_fg="#a4b1cd"
c_bg="$lightblue"
c_hl="$lime"

set -g status-justify centre
set -gF status-style "bg=$blue,fg=$c_fg"
# set -gF window-style "bg=$blue,fg=$c_fg" # sets terminal window colors
set -g message-style "bg=$darkblue,fg=$c_hl"
# set -g window-status-separator "·"
symbol_left=""  # "       "
symbol_right="" # "       "
s_left="#[fg=$c_bg]$symbol_left#[fg=$c_fg,bg=$c_bg]"
s_right="#[default]#[fg=$c_bg]$symbol_right"

set -g status-left-length 40   # long ec2 names.. not needed
set -g status-right-length 100 #
setw -g window-status-format "$s_left#I  #W$s_right"
setw -g window-status-current-format "#[fg=$c_hl]$symbol_left#[fg=black,bg=$c_hl]#I #[bold] #{window_name}#[default]#[fg=$c_hl]$symbol_right"
setw -g window-status-activity-style "fg=$yellow"
# set -g window-status-bell-style "fg=$yellow"
# outline for active pane
setw -g pane-border-style "fg=$c_fg"
setw -g pane-active-border-style "fg=$c_hl"
set -g status-left "$s_left#[fg=$darkpurple]#S$s_right"
set -ag status-left " $s_left#[fg=$green] #[fg=$c_fg]#U㉿#H$s_right"
set -g status-right "$s_left#{cpu_fg_color} #{cpu_percentage}$s_right "
set -ag status-right "$s_left#{ram_fg_color}󰒋 #{ram_percentage}$s_right "
set -ag status-right "$s_left#{battery_icon} #{battery_percentage}$s_right "
set -ag status-right "$s_left#{online_status}󰔟 %I:%M %d$s_right"

# =====================================
# ===     Working with Plugins      ===
# =====================================

# Load TPM
set -g @plugin 'tmux-plugins/tpm'
# Plugins
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'soyuka/tmux-current-pane-hostname'
set -g @plugin 'ofirgall/tmux-window-name'
set -g @tmux_window_name_use_tilde "True"
# Cpu plugin config
set -ogq @cpu_low_fg_color "#[fg=$c_fg]"
set -ogq @ram_low_fg_color "#[fg=$c_fg]"
set -ogq @cpu_medium_fg_color "#[fg=$orange]"
set -ogq @ram_medium_fg_color "#[fg=$orange]"
set -ogq @cpu_high_fg_color "#[fg=$red]"
set -ogq @ram_high_fg_color "#[fg=$red]"
# Battery plugin config
set -ogq @batt_icon_charge_tier8 "󰁹"
set -ogq @batt_icon_charge_tier7 "󰂁"
set -ogq @batt_icon_charge_tier6 "󰁿"
set -ogq @batt_icon_charge_tier5 "󰁾"
set -ogq @batt_icon_charge_tier4 "󰁽"
set -ogq @batt_icon_charge_tier3 "#[fg=$orange]󰁼"
set -ogq @batt_icon_charge_tier2 "#[fg=$red]󰁻"
set -ogq @batt_icon_charge_tier1 "#[fg=$red]󰁺"
set -ogq @batt_icon_status_charged "#[fg=$c_hl]󰚥"
set -ogq @batt_icon_status_charging "#[fg=$green]󰂄#[fg=$c_fg]"
set -ogq @batt_icon_status_discharging "#[fg=$orange]󰂃#[fg=$c_fg]"
set -ogq @batt_icon_status_unknown "󰂑"
set -ogq @batt_icon_status_attached "󱈑"
# Load TPM as the last command
run -b /usr/share/tmux-plugin-manager/tpm
